{"name":"Action","qualifiedName":"undone/undone.Action","comment":"<p>An action that can be done and undone.</p>\n<p>Actions are comprised of a pair of functions: one to <a>undone/undone.Do</a> the action and\nanother to <a>undone/undone.Undo</a> the action.  The action object is itself a function that \ncan be <a>undone/undone.Action.call</a>ed to schedule it to be done on the top-level <a>undone/undone.schedule</a> or\nto add it to a <a>undone/undone.Transaction</a> if called within the scope of <a>undone/undone.transact</a>.</p>\n<p>All actions are done and undone asynchronously, regardless of the functions \nthemselves.  Actions may be optionally typed by their argument and result \nobjects, <a>undone/undone.Action.A</a> and <a>undone/undone.Action.R</a>.</p>\n<p>The action type may be extended to define custom actions although this may\noften not be necessary; creating an action with the functions to do and\nundo the desired operation is often the simplest and best approach.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":["undone/undone.Transaction"],"variables":{"canUndo":{"name":"canUndo","qualifiedName":"undone/undone.Action.canUndo","comment":"<p>Whether or not this action can be undone.</p>","final":"true","static":"false","constant":"false","type":[{"outer":"dart-core.bool","inner":[]}],"annotations":[]},"timeout":{"name":"timeout","qualifiedName":"undone/undone.Action.timeout","comment":"<p>The maximum allowed duration for this action's <a>undone/undone.Do</a> or <a>undone/undone.Undo</a> function.</p>\n<p>The default value is 30 seconds unless otherwise specified in the \nnew Action constructor.</p>\n<p>When a timeout occurs, this action will complete with an error.</p>","final":"true","static":"false","constant":"false","type":[{"outer":"dart-core.Duration","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"undone/undone.Action.Action-","comment":"<p>Creates a new action with the given arguments, <a>undone/undone.Do</a> function, and \n<a>undone/undone.Undo</a> function.</p>\n<p>The <a>undone/undone.Undo</a> function may be <code>null</code> to specify a non-undoable action.  The\noptional <a>undone/undone.Action.Action-.timeout</a> defaults to 30 seconds and may be <code>null</code> to specify no\ntimeout.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dynamic","inner":[]}],"parameters":{"_arg":{"name":"_arg","optional":"false","named":"false","default":"false","type":[{"outer":"undone/undone.Action.A","inner":[]}],"value":"null","annotations":[]},"d":{"name":"d","optional":"false","named":"false","default":"false","type":[{"outer":"undone/undone.Do","inner":[]}],"value":"null","annotations":[]},"u":{"name":"u","optional":"false","named":"false","default":"false","type":[{"outer":"undone/undone.Undo","inner":[]}],"value":"null","annotations":[]},"timeout":{"name":"timeout","optional":"true","named":"true","default":"true","type":[{"outer":"dart-core.Duration","inner":[]}],"value":"ConstructedConstant(Duration(\"_duration\"=Instance of 'IntConstant'))","annotations":[]}},"annotations":[]}},"operators":{},"methods":{"call":{"name":"call","qualifiedName":"undone/undone.Action.call","comment":"<p>Schedules this action to be called on the top-level <a>undone/undone.schedule</a>.  </p>\n<p>If this action is called within the scope of a top-level <a>undone/undone.transact</a> method\nit will instead be added to that transaction.  Completes with the result \nof the action in both cases.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-async.Future","inner":[{"outer":"dynamic","inner":[]}]}],"parameters":{},"annotations":[]},"toString":{"name":"toString","qualifiedName":"undone/undone.Action.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"undone/undone.Action.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>undone/undone.Action.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"undone/undone.Action.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"undone/undone.Action.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>undone/undone.Action.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>undone/undone.Action.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":"false","named":"false","default":"false","type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"undone/undone.Action.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"undone/undone.Action.noSuchMethod","comment":"<p><a>undone/undone.Action.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>undone/undone.Action.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>undone/undone.Action.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>undone/undone.Action.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":"false","abstract":"false","constant":"false","return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":"false","named":"false","default":"false","type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{"A":{"name":"A","type":"dart.core.Object"},"R":{"name":"R","type":"dart.core.Object"}}}